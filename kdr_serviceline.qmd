---
title: "Key Driver Summary (FY25)"
format: html
editor: visual
params:
---

```{r}
#| echo: false
#| warning: false 


# 
# ##due to export restrictions, powerbi desktop data query was sent to powerbi service (online) and exported to excel month by month
# ##service line is limited to outpatient oncology due to data size limits
# ##the monthly clinic data is read in one by one
# 
# ## load packages-----
# library(readxl)
# library(dplyr)
# library(tidyverse)
# library(janitor)
# 
# # ## import data ------
# jul24 <- read_excel("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/jul2024.xlsx")
# aug24 <- read_excel("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/aug2024.xlsx")
# sep24 <- read_excel("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/sep2024.xlsx")
# oct24 <- read_excel("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/oct2024.xlsx")
# nov24 <- read_excel("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/nov2024.xlsx")
# dec24 <- read_excel("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/dec2024.xlsx")
# # 
# # ##combine rows of data tables
# # 
# op_data<-rbind(jul24, aug24, sep24, oct24, nov24, dec24)
# 
# op_data <- op_data%>%
#   clean_names() %>%
#   as.data.frame() %>%
#   rename(question=question_text_latest,
#          top_box=top_box_ind) %>%
#   mutate(recdate = as.Date(recdate)) %>%
#   mutate(response = as.numeric(response))%>%
#   filter (service =="ON", na.rm = TRUE)
# 
# 
# save(op_data, file = "C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/op_data.Rdata")
# 


#load packages ----
library(tidyverse)
library(janitor)
library(dplyr)
library(Hmisc)
library(magrittr)
library(kableExtra)
library(janitor)
library(gt)
library(tinytex)

load("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/op_data.Rdata")
load("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_clinic/data/op_question.Rdata")
PG.OP.Ranks <- read.csv("C:/Users/4477078/OneDrive - Moffitt Cancer Center/Key Drivers/kdr_serviceline/data/PG OP Ranks.csv", comment.char="#")

#set data parameters: service line, clinic, outcome variable(s)----

data<-op_data


svc<-data%>%
  distinct(service)

if (svc =='ON'){
  outvar<-"O3"
  outvar_all<-c("MED7","O2","O3","O7") #Outpatient Oncology
} else {
  outvar<-"O4"
  outvar_all<-c("CP10","O3","O4") # Virtual Health
}

svcline_filter <- "Outpatient Oncology"

#Correlations
r<-data%>%
  select(survey_id,varname,response) %>% 
  spread(varname,response) %>% #convert from long to wide format
  mutate (survey_id = as.numeric(survey_id)) %>% #not sure why I have to do this for it not to give me an error.
  cor(use='pairwise.complete.obs')

tmp1<-r[-1,outvar,drop=FALSE] #drop the survey id, select outvar column & convert to data frame
tmp1<-as.data.frame(tmp1)
tmp1$varname <- rownames(tmp1)
colnames(tmp1)[1] = "corr"
tmp1 <- tmp1 %>%
  filter(corr != "NA")


tbscore<-data %>%
  select(survey_id,varname,top_box)%>% #subset original data set
  group_by(varname)%>%
  summarise(tbscore=sum(top_box)/n()*100,n=n())%>% #calculate topbox
  filter(n>29)%>% #remove small samples
  group_by(varname)
 

#Top Box Ratios
#Step 1. convert clinic level data to wide data set nrows = survey count
tbwide<-data%>%
  select(survey_id,varname,top_box)%>% #use only topbox data
  spread(varname,top_box)%>% #convert from long to wide format
  select(-c(survey_id,I69)) #temporary code removes problematic column

# test<-addmargins(xtabs(~o4+o4,tbwide))
# test

#Step 2. create functions to create table(x) and calculate tbratio(y)
tbratio<-function(data,var){
  x<-addmargins(xtabs(~data[,var]+data[,outvar],data))
  y<-((x[2,2]+0.5)/(x[2,3]+1))/((x[1,2]+0.5)/(x[1,3]+1)) 
  return(y)
}


#calculate tbratio across all variables & store as data frame
tmp2<-data.frame()
for (i in 1:dim(tbwide)[2]){ 
  m<-tbratio(tbwide,i)
  tmp2[i,1] <- colnames(tbwide)[i]
  tmp2[i,2] <- m
}

colnames(tmp2)<-c('varname','ratio')

#Percentile Rank


rankings<-PG.OP.Ranks %>%
  clean_names() %>%
  rename(varname=var_name)%>%
  select(varname,all_facilities_rank) #subset original data set
 


#merge rankdata, tbratio (tmp2), and correlations(tmp1) to form a table
df0 <- merge(tmp1,tbscore)
df1<-merge(rankings,df0)
df2<-merge(df1,tmp2)
df3<-subset(df2, !(varname %in% outvar_all))#removes the response variables from priority index calculations

#Sorted KDR

kd0<-df3%>%
  mutate(rescaled_corr = (corr-min(corr))/(max(corr)-min(corr)),
         rescaled_tbratio = (ratio-min(ratio))/(max(ratio)-min(ratio)),
         driver_index = 100*((rescaled_corr + rescaled_tbratio)/2),
         priority_index = driver_index-(0.5*((all_facilities_rank)))
  )


kd1<-left_join(df2,kd0)

kd2<-merge(kd1,questions,by="varname") 

kdr<-kd2%>%
  top_n(10,priority_index)%>%
  arrange(desc(priority_index))%>%
  select(question_text_latest,corr,ratio,driver_index,tbscore,all_facilities_rank)%>%
  mutate(across(c(corr,ratio),round, 2))%>%
  mutate(tbscore=round(tbscore,1))%>%
  mutate(across(c(driver_index,all_facilities_rank),round))%>%
  mutate(tbscore_rank=paste(tbscore," (",all_facilities_rank,")"))%>%
  select(-c(tbscore,all_facilities_rank))%>%
  rename('Question' = question_text_latest)%>%
  rename('Linear Correlation' = corr)%>%
  rename('Top-Box Ratio' = ratio)%>%
  rename('Driver Index' = driver_index)%>%
  rename('Top-Box Score (Percentile Rank)' = tbscore_rank)
  
kdr<-rowid_to_column(kdr)

kdr<-kdr%>%
  rename('Priority'=rowid)

ltr<-kd2%>%
  filter(varname==outvar)%>%
  select(question_text_latest,tbscore,all_facilities_rank,n)%>%
  mutate(all_facilities_rank=round(all_facilities_rank,0))%>%
  mutate(tbscore=round(tbscore,1))%>%
  mutate(tbscore_rank=paste(tbscore," (",all_facilities_rank,")"))%>%
  rename('Question' = question_text_latest)%>%
  rename('Top-Box Score' = tbscore)%>%
  rename('Percentile Rank'= all_facilities_rank)%>%
  rename('Top-Box Score (Percentile Rank)' = tbscore_rank)
```

#### `r svcline_filter`

------------------------------------------------------------------------

<!--  *** inserts a horizontal line -->

[The table lists the top ten survey questions, sorted in order of priority, that drive the respondents' top box score for the Institutional Measure:]{.important}

<center>***"`r ltr[,1]`"***</center>

```{r}
#| echo: false
#| warning: false

ltr2<-ltr%>%
  mutate("Priority"="")%>%
  mutate("Linear Correlation"="")%>%
  mutate("Top-Box Ratio"="")%>%
  mutate("Driver Index"="")%>%
  select("Priority","Question","Linear Correlation","Top-Box Ratio","Driver Index","Top-Box Score (Percentile Rank)")


total<-rbind(ltr2,kdr)

total%>%
  gt()%>%
  cols_align(align="center",
             columns = everything()) %>%
  tab_options(
    table.font.size = px(14L),
    column_labels.font.size = px(15L),
    column_labels.font.weight = "bold",
    # column_labels.background.color = '#002f6c') %>% #Moffitt Deep Blue
    column_labels.background.color = '#a4dbe8') %>% #Moffitt Light Blue
  # cols_width(
  #   starts_with("Question") ~ px(500)) %>%
  cols_align(
    align = "left",
    columns = Question) %>%
  tab_style(
    style=cell_text(align="center"),
    locations = cells_column_labels(columns = everything())
            )

```

{{< pagebreak >}}

**Notes:**

-   This summarizes the results of ***`r ltr[,4]`*** surveys received between ***`r min(data$recdate)`*** and ***`r max(data$recdate)`***.

-   The percentile rank is an external rank that compares Moffitt's Outpatient Oncology service line against all facilities in the Press Ganey database. An "All Facilities Rank" rank of 90 means the score is in the top 10 percent of all clinics.

-   The correlation measures the strength of the linear association between the response to the institutional measure and the question of interest.

-   The top box ratio calculates the likelihood of giving the top box score for the institutional measure, given the score is a top box for the question of interest.

-   The driver index sorts the combined correlation and top box ratio scores.

-   The priority order is determined by combining the driver index and the percentile rank.
